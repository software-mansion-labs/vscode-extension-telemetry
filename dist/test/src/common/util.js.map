{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../src/common/util.ts"],"names":[],"mappings":";AAAA;;4DAE4D;;;AAU5D,MAAa,aAAa;IAGlB,MAAM,CAAC,iBAAiB,CAAC,IAAyB,EAAE,kBAAuC;QACjG,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACrC,KAAK,MAAM,MAAM,IAAI,kBAAkB,EAAE,CAAC;gBACzC,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;oBAC7B,IAAI,MAAM,CAAC,iBAAiB,KAAK,SAAS,EAAE,CAAC;wBAC5C,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,iBAAiB,CAAC;oBACtC,CAAC;yBAAM,CAAC;wBACP,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,CAAC;gBACF,CAAC;YACF,CAAC;QACF,CAAC;IACF,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,yBAAyB,CAAC,GAAW;QAClD,6FAA6F;QAC7F,OAAO,CACN,GAAG,CAAC,MAAM,KAAK,EAAE;YACjB,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG;YACf,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG;YACf,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG;YACf,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG;YACf,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG;YACf,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,CACf,CAAC;IACH,CAAC;IAED,+DAA+D;IAC/D,qGAAqG;IACrG,2GAA2G;IAC3G,kHAAkH;IAClH,iHAAiH;IACjH,oHAAoH;IACpH,iKAAiK;IACjK,kHAAkH;IAClH,gHAAgH;IAChH,yGAAyG;IACzG,6GAA6G;IAC7G,kHAAkH;IAClH,0GAA0G;IAC1G,yHAAyH;IAClH,MAAM,CAAC,6BAA6B,CAAC,MAAmE;QAC9G,OAAO;YACN,WAAW,EAAE,MAAM,CAAC,QAAQ;YAC5B,iBAAiB,EAAE,MAAM,CAAC,YAAY;YACtC,wBAAwB,EAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,4BAA4B,EAAE,QAAQ,CAAC;YACjG,yEAAyE;YACzE,+BAA+B,EAAE,sBAAsB;SACvD,CAAC;IACH,CAAC;IAED,0CAA0C;IACnC,MAAM,CAAC,WAAW;QACxB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;YAC9B,aAAa,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;QAC/C,CAAC;QACD,OAAO,aAAa,CAAC,SAAS,CAAC;IAChC,CAAC;CACD;AAjED,sCAiEC","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport type { ReplacementOption } from \"./baseTelemetryReporter\";\n\nexport const enum TelemetryLevel {\n\tON = \"on\",\n\tERROR = \"error\",\n\tOFF = \"off\"\n}\n\nexport class TelemetryUtil {\n\tprivate static _instance: TelemetryUtil | undefined;\n\n\tpublic static applyReplacements(data: Record<string, any>, replacementOptions: ReplacementOption[]) {\n\t\tfor (const key of Object.keys(data)) {\n\t\t\tfor (const option of replacementOptions) {\n\t\t\t\tif (option.lookup.test(key)) {\n\t\t\t\t\tif (option.replacementString !== undefined) {\n\t\t\t\t\t\tdata[key] = option.replacementString;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete data[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Given a key / connection string checks if it is a valid 1DS key\n\t * @param key The key to check if it's a valid 1DS key\n\t */\n\tpublic static shouldUseOneDataSystemSDK(key: string): boolean {\n\t\t// Simple to check to ensure the key is the right length and the dashes are in the right spot\n\t\treturn (\n\t\t\tkey.length === 74 &&\n\t\t\tkey[32] === \"-\" &&\n\t\t\tkey[41] === \"-\" &&\n\t\t\tkey[46]\t=== \"-\" &&\n\t\t\tkey[51] === \"-\" &&\n\t\t\tkey[56] === \"-\" &&\n\t\t\tkey[69] === \"-\"\n\t\t);\n\t}\n\n\t// This also includes the common properties which core mixes in\n\t// __GDPR__COMMON__ \"common.os\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.platformversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.extname\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.extversion\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.vscodemachineid\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.vscodesessionid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.vscodeversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.uikind\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.remotename\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.isnewappinstall\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t// __GDPR__COMMON__ \"common.telemetryclientversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tpublic static getAdditionalCommonProperties(osShim: { release: string, platform: string, architecture: string }) {\n\t\treturn {\n\t\t\t\"common.os\": osShim.platform,\n\t\t\t\"common.nodeArch\": osShim.architecture,\n\t\t\t\"common.platformversion\":  (osShim.release || \"\").replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, \"$1$2$3\"),\n\t\t\t// Do not change this string as it gets found and replaced upon packaging\n\t\t\t\"common.telemetryclientversion\": \"PACKAGE_JSON_VERSION\"\n\t\t};\n\t}\n\n\t// Get singleton instance of TelemetryUtil\n\tpublic static getInstance(): TelemetryUtil {\n\t\tif (!TelemetryUtil._instance) {\n\t\t\tTelemetryUtil._instance = new TelemetryUtil();\n\t\t}\n\t\treturn TelemetryUtil._instance;\n\t}\n}\n"]}